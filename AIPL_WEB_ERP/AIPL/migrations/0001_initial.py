# Generated by Django 5.1.2 on 2024-11-14 03:50

import AIPL.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InternshipApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('institute_name', models.CharField(max_length=200)),
                ('course', models.CharField(max_length=200)),
                ('role', models.CharField(choices=[('Machine Learning Intern', 'Machine Learning with Python'), ('Artificial Intelligence Intern', 'Artificial Intelligence and GenAI'), ('Cyber Security Intern', 'Cyber Security Analyst'), ('Full Stack Development Intern', 'Full Stack Web Development (MERN Stack)'), ('Android Development Intern', 'Android Development'), ('Data Analyst Intern', 'Data Science with PYTHON'), ('Cloud Computing Intern', 'Cloud Computing'), ('IOS App Development Intern', 'IOS App Development'), ('Dot Net Backend Development Intern', 'Backend with .Net'), ('PHP Backend Development Intern', 'Backend with PHP'), ('Database Admin Intern', 'Database Administrator'), ('SDE with Java Trainee', 'SDE with Java'), ('UIUX Development Intern', 'UI UX Developer Intern'), ('Digital Marketing Intern', 'Digital Marketing'), ('Content Writer Intern', 'Content Writer'), ('Finance Intern', 'Finance'), ('Marketing Intern', 'Marketing'), ('Business Development Analyst Intern', 'Business Development Analyst')], max_length=100)),
                ('branch', models.CharField(choices=[('cse', 'Computer Science'), ('ee', 'Electrical Engineering'), ('me', 'Mechanical Engineering'), ('ce', 'Civil Engineering'), ('it', 'Information Technology'), ('ece', 'Electronics and Communication Engineering'), ('mse', 'Materials Science and Engineering'), ('env', 'Environmental Engineering'), ('automobile', 'Automobile Engineering'), ('hr', 'Human Resources'), ('finance', 'Finance'), ('marketing', 'Marketing'), ('business_admin', 'Business Administration'), ('digital_marketing', 'Digital Marketing')], max_length=100)),
                ('linkedin_profile_url', models.URLField(blank=True, null=True)),
                ('github_profile_url', models.URLField(blank=True, null=True)),
                ('custom_resume', models.FileField(blank=True, null=True, upload_to='nginx/resumes/', validators=[AIPL.models.validate_file_size, AIPL.models.validate_file_extension])),
                ('college_id', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='newsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Email Sender (Limited to Subscribers) ',
                'verbose_name_plural': 'Email Sender (Limited to Subscribers) ',
            },
        ),
        migrations.CreateModel(
            name='subscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': "View Subscriber's Email ",
                'verbose_name_plural': "View Subscriber's Email ",
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='dataDeletionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('privacy concern', 'Privacy Concern'), ('security concern', 'Security Concern'), ('no longer needed', 'No Longer Needed'), ('regulatory request (e.g. gdpr/ccpa)', 'Regulatory Request (e.g. GDPR/CCPA)'), ('other', 'Other')], max_length=55)),
                ('additional_info', models.TextField(max_length=1500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Deletion Request',
                'verbose_name_plural': 'Data Deletion Requests',
            },
        ),
        migrations.CreateModel(
            name='developer_profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_role', models.CharField(choices=[('Frontend Dev', 'Frontend Dev'), ('Backend Dev', 'Backend Dev'), ('UIUX Dev', 'UIUX Dev'), ('DevOps Eng', 'DevOps Eng'), ('Fullstack Dev', 'Fullstack Dev'), ('IOS Dev', 'IOS Dev'), ('Software Dev', 'Software Dev'), ('AI/ML Eng', 'AI/ML Eng'), ('Data Analyst', 'Data Analyst'), ('DB Admin', 'DB Admin'), ('Cloud Dev', 'Cloud Dev'), ('Blockchain Dev', 'Blockchain Dev'), ('AR/VR Dev', 'AR/VR Dev'), ('Test Automation', 'Test Automation'), ('BDA Trainee', 'BDA Trainee'), ('Content Writer', 'Content Writer'), ('Digital Marketing Trainee', 'Digital Marketing Trainee'), ('Backend Dev .Net', 'Backend Dev .Net'), ('Backend Dev PHP', 'Backend Dev PHP'), ('Database Administrator', 'Database Administrator'), ('SDE with Java', 'SDE with Java'), ('Business Development Analyst', 'Business Development Analyst'), ('Head | Human Resources', 'Head | Human Resources'), ('Intern | Human Resources', 'Intern | Human Resources'), ('Director IT', 'Director IT'), ('CEO', 'CEO'), ('Deputy Director', 'Deputy Director')], max_length=50)),
                ('points', models.IntegerField(default=0)),
                ('rank', models.IntegerField(default=0)),
                ('developer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee ID')),
            ],
            options={
                'verbose_name': "AIPL's Employee ",
                'verbose_name_plural': "AIPL's Employee ",
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('timezone', models.CharField(default='UTC', max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('reason', models.CharField(choices=[('Consultation', 'Consultation'), ('Support', 'Support'), ('Demo', 'Demo'), ('Product Demonstration', 'Product Demonstration'), ('Business Development', 'Business Development'), ('Strategic Planning', 'Strategic Planning'), ('Project Kickoff', 'Project Kickoff'), ('Other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Available Meeting',
                'verbose_name_plural': 'Available Meeting',
                'ordering': ['date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('recipient', models.ManyToManyField(related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_leader', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('institution', models.CharField(blank=True, max_length=50)),
                ('institution_id', models.CharField(blank=True, max_length=50)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='AIPL.team')),
            ],
        ),
        migrations.CreateModel(
            name='ManageTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_title', models.CharField(max_length=80)),
                ('task_detail', models.TextField(max_length=2000)),
                ('task_created_at', models.DateTimeField(auto_now=True)),
                ('task_completion_status', models.BooleanField(default=False)),
                ('task_deadline', models.DateTimeField(blank=True, null=True)),
                ('task_priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('task_progress', models.CharField(choices=[('not started', 'Not Started'), ('in progress', 'In Progress'), ('completed', 'Completed')], default='not started', max_length=20)),
                ('receiver', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='received_tasks_manage', to=settings.AUTH_USER_MODEL)),
                ('task_sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_tasks_manage', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Developer Tool',
                'verbose_name_plural': 'Developer Tools',
                'unique_together': {('task_title', 'receiver', 'task_sender')},
            },
        ),
    ]
