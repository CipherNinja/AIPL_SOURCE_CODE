# Generated by Django 4.0.6 on 2024-09-12 18:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='newsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Email Sender (Limited to Subscribers) ðŸ“§',
                'verbose_name_plural': 'Email Sender (Limited to Subscribers) ðŸ“§',
            },
        ),
        migrations.CreateModel(
            name='subscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': "View Subscriber's Email ðŸ‘¤",
                'verbose_name_plural': "View Subscriber's Email ðŸ‘¤",
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('recipient', models.ManyToManyField(related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notify/Update Sender ðŸ“§',
                'verbose_name_plural': 'Notify/Update Sender ðŸ“§',
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('timezone', models.CharField(default='UTC', max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('reason', models.CharField(choices=[('Consultation', 'Consultation'), ('Support', 'Support'), ('Demo', 'Demo'), ('Product Demonstration', 'Product Demonstration'), ('Business Development', 'Business Development'), ('Strategic Planning', 'Strategic Planning'), ('Project Kickoff', 'Project Kickoff'), ('Other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Available Meeting',
                'verbose_name_plural': 'Available Meeting',
                'ordering': ['date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='developer_profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_role', models.CharField(choices=[('Frontend Dev', 'Frontend Dev'), ('Backend Dev', 'Backend Dev'), ('DevOps Eng', 'DevOps Eng'), ('Fullstack Dev', 'Fullstack Dev'), ('AA Dev', 'AA Dev'), ('IOS Dev', 'IOS Dev'), ('Software Dev', 'Software Dev'), ('AI/ML Eng', 'AI/ML Eng'), ('Data Analyst', 'Data Analyst'), ('DB Admin', 'DB Admin'), ('Cloud Dev', 'Cloud Dev'), ('Blockchain Dev', 'Blockchain Dev'), ('AR/VR Dev', 'AR/VR Dev'), ('Test Automation', 'Test Automation')], max_length=50)),
                ('points', models.IntegerField(default=0)),
                ('rank', models.IntegerField(default=0)),
                ('developer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee ID')),
            ],
            options={
                'verbose_name': "AIPL's Employee ðŸ§‘\u200dðŸ”¬",
                'verbose_name_plural': "AIPL's Employee ðŸ§‘\u200dðŸ”¬",
            },
        ),
        migrations.CreateModel(
            name='dataDeletionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('privacy concern', 'Privacy Concern'), ('security concern', 'Security Concern'), ('no longer needed', 'No Longer Needed'), ('regulatory request (e.g. gdpr/ccpa)', 'Regulatory Request (e.g. GDPR/CCPA)'), ('other', 'Other')], max_length=55)),
                ('additional_info', models.TextField(max_length=1500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Deletion Request',
                'verbose_name_plural': 'Data Deletion Requests',
            },
        ),
        migrations.CreateModel(
            name='AddTaskDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('detail', models.TextField(max_length=800)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('accepted_by', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Task Assign Tool ðŸ§‘\u200dðŸ”¬',
                'verbose_name_plural': 'Task Assign Tool ðŸ§‘\u200dðŸ”¬',
            },
        ),
    ]
